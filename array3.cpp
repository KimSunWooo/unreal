#include<iostream>


int main() {
	int arr1[4][3];

	arr1[0][0] = 1;
	arr1[0][1] = 2;
	arr1[0][2] = 3;

	arr1[1][0] = 4;
	arr1[1][1] = 5;
	arr1[1][2] = 6;

	arr1[2][0] = 7;
	arr1[2][1] = 8;
	arr1[2][2] = 9;
	
	arr1[3][0] = 10;
	arr1[3][1] = 11;
	arr1[3][2] = 12;

	std::cout << arr1[0][0] << " , " << arr1[0][1] << " , " << arr1[0][2] << std::endl;
	std::cout << arr1[1][0] << " , " << arr1[1][1] << " , " << arr1[1][2] << std::endl;
	std::cout << arr1[2][0] << " , " << arr1[2][1] << " , " << arr1[2][2] << std::endl;
	std::cout << arr1[3][0] << " , " << arr1[3][1] << " , " << arr1[3 ][2] << std::endl;

	int arr2[4][3] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };

	for (int i = 0; i < 4; i++) {
		std::cout << std::endl;

		for (int k = 0; k < 4; k++)
		{
			std::cout << arr2[i][k] << std::endl;
		}
	}
	// 2중배열 선언
	// 아파트에 사람이 있음
	// 각 층에는 3개의 호실만 존재하고 3층까지 있다
	// 각층 각호의 가족이 몇명사는지 입력받고 아파트에 총 몇명이 살고있는지 그 합을 구하여라.

	//int apt[3][3] = { 0 };
	//int total = 0;

	//for (int i = 0; i < 3; i++) {
	//	for (int k = 0; k < 3; k++)
	//	{
	//		std::cout << "각 층 각 호에 가족은 몇명 살고있나요" << i + 1 << " 층" << "---" << k + 1 << "호" << std::endl;
	//		std::cin >> apt[i][k];
	//	}

	//}

	//for (int i = 0; i < 3; i++) {
	//	for (int k = 0; k < 3; k++)
	//	{
	//		total += apt[i][k];
	//	}

	//}
	//std::cout << "총 주민 수 : " << total << " 명" << std::endl;

	// 과제
	// 숫자야구게임
	// 
	// 1. 플레이어가 있다.
	// 2. 컴터가 있다.
	// 3 . 숫자의 범위(0~9)
	// 
	// ㄴ 컴퓨터는 입의의 숫자 세개를 받는다.
	// ㄴ 만약 컴퓨터가 2, 3, 5 세개의 숫자를 받았다
	// ㄴ 플레이어가 맞춰야 함
	// ㄴ 조건. 플레이어가 3,2,7 을 입력했을 때
	// ㄴ 각각의 행 과 열에 있는 숫자를 비교한다
	// ㄴ 2, 3은 숫자는 같지만 행과 열의 위치가 다르므로 2ball
	// ㄴ 7은 없는 숫자이므로 out, 결과적으로 2ball
	// ㄴ 아무것도 맞추지 못하는 경우 배팅한 금액의 2배 만큼 손실.

	// 배팅액
	// 플레이어의 소지금 : 10000
	// 당연히 배팅액은 소지금보다 클 수 없다.
	// 이왕이면 최소 배팅금액 설정
	// 따는 조건은 스트라이크의 갯수와는 상관없이 배팅 금액의 2배
	// 종료 조건
	// ㄴ10판
	// ㄴ 시드머니가 최소 배팅금액보다 적을 경우
	// 
	// 내일 발표 (메모리 영역 > PPT)

	char name[6] = "hello";
	//  null값을 포함한 크기
	char name1[] = { 'h', 'e', 'l', 'l', 'o' , NULL};
	std::cout << name1 << std::endl;

	// char* : 문자열의 시작주소를 가리킴
	const char* str = "hi";
	std::cout << str << std::endl;

	/*
	hello : 

	주소 : 1000  1001  1002  1003  1004  1005
	값   :  H     e     l     l     o     \0
	*/

	/*
	const char* a = "Hello";
	 - 문자열이 저장 된 메모리 주소를 가리키는 포인터를 선언
	 - 포인터 자체는 상수가 아니지만 가리키는 대상은 상수.
	const char ab[] = "Hello";

	주소 : 1000  1001  1002  1003  1004  1005
	값   :  H     e     l     l     o     \0
	*/
}